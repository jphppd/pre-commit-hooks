---

# This file tells https://pre-commit.com/
# which hooks are provided by this repo
# for use by other git repos.

# - id: the id of the hook - used in pre-commit-config.yaml.
# # Description
#   name: 'the name of the hook, shown during hook execution.'
#   description: description of the hook. used for metadata purposes only.
# # Installation
#   language: the language of the hook, tells pre-commit
#   how to install the hook.
#   language_version: overrides language version.
# # Scope
#   files: the pattern of files to run on.
#   exclude: exclude files that were matched by files
#   types: list of file types to run on.
#   exclude_types: exclude files that were matched by types.
#   always_run: if true this hook will run even if there are no matching files.
# # Output
#   verbose: if true, forces the output of the hook to be printed.
# # Misc
#   minimum_pre_commit_version: indicate a minimum compatible
#   pre-commit version.
#   require_serial: if true, run using a single process.
# # Action
#   entry: the entry point - the executable to run.
#   pass_filenames: if false no arguments will be passed to the hook.
#   args: list of additional parameters to pass to the hook.

#  Template
# - id:
#   name:
#   description:
#   language:
#   files:
#   exclude:
#   types:
#   exclude_types:
#   always_run:
#   entry:
#   pass_filenames:
#   args:

#########
#########
## Git ##
#########
#########

- id: git-check-mailmap
  name: '[Git] Check mailmap'
  description: >
    Detect if an email address needs to be added to mailmap
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  language: python
  exclude: .*  # Otherwise runs once per file.
  always_run: true
  entry: git-check-mailmap

- id: git-forbid-binary
  name: '[Git] Forbid binaries'
  description: >
    Forbid binary files from being committed
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  language: fail
  types:
    - binary
  entry: Committing binary files is not allowed.

- id: git-check
  name: '[Git] Check for conflict markers and core.whitespace errors'
  description: >
    Use git to check for conflict markers and core.whitespace errors,
    respecting .gitattributes
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  language: script
  entry: hooks/shell/git-check

- id: git-dirty
  name: '[Git] Check if the git tree is dirty'
  description: >
    Detect if git tree contains modified, staged, or untracked files
    curtosy: https://github.com/jumanjihouse/pre-commit-hooks
  language: script
  entry: hooks/shell/git-dirty

- id: git-check-added-large-files
  name: '[Git] Check for added large files'
  description: >
    Prevent giant files from being committed
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  entry: git-check-added-large-files
  args:
    - --maxkb=500

- id: git-check-merge-conflict
  name: '[Git] Check for merge conflicts'
  description: >
    Check for files that contain merge conflict strings.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: git-check-merge-conflict

#############
#############
## Generic ##
#############
#############

- id: generic-check-byte-order-marker
  name: '[Generic] Check for byte-order marker'
  description: >
    Forbid files which have a UTF-8 byte-order marker
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-check-byte-order-marker

- id: generic-check-case-conflict
  name: '[Generic] Check for case conflicts'
  description: >
    Check for files that would conflict in case-insensitive filesystems
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: generic-check-case-conflict

- id: generic-check-executables-have-shebangs
  name: '[Generic] Check that executables have shebangs'
  description: >
    Ensures that (non-binary) executables have a shebang.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
    - executable
  entry: generic-check-executables-have-shebangs

- id: generic-check-symlinks
  name: '[Generic] Check for broken symlinks'
  description: >
    Checks for symlinks which do not point to anything.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - symlink
  entry: generic-check-symlinks

- id: generic-check-vcs-permalinks
  name: '[Generic] Check vcs permalinks'
  description: >
    Ensures that links to vcs websites are permalinks.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-check-vcs-permalinks

- id: generic-detect-private-key
  name: '[Generic] Detect Private Key'
  description: >
    Detects the presence of private keys
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-detect-private-key

- id: generic-end-of-file-fixer
  name: '[Generic] Fix End of Files'
  description: >
    Ensures that a file is either empty, or ends with one newline.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-end-of-file-fixer

- id: generic-trailing-whitespace
  name: '[Generic] Trim Trailing Whitespace'
  description: >
    This hook trims trailing whitespace.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-trailing-whitespace-fixer

- id: generic-crlf-forbid
  name: '[Generic] CRLF end-lines checker'
  description: >
    Forbid files containing CRLF end-lines to be committed
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-crlf-forbid

- id: generic-crlf-remove
  name: '[Generic] CRLF end-lines remover'
  description: >
    Replace CRLF end-lines by LF ones before committing
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-crlf-remove

- id: generic-tabs-forbid
  name: '[Generic] No-tabs checker'
  description: >
    Forbid files containing tabs to be committed
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: python
  exclude: (.*Makefile.*|debian/rules(\.in)?)
  types:
    - text
  entry: generic-tabs-forbid

- id: generic-tabs-remove
  name: '[Generic] Tabs remover'
  description: >
    Replace tabs by whitespaces before committing
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: python
  exclude: (.*Makefile.*|debian/rules(\.in)?)
  types:
    - text
  entry: generic-tabs-remove
  args:
    - --whitespaces-count=4

- id: generic-nbsp-forbid
  name: '[Generic] Detect nbsp U+00A0'
  description: >
    Detect unicode non-breaking space character U+00A0 aka M-BM-
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - text
  entry: perl -ne 'print if $m = /\xc2\xa0/; $t ||= $m; END{{exit $t}}'

- id: generic-nbsp-remove
  name: '[Generic] Remove nbsp U+00A0'
  description: >
    Remove unicode non-breaking space character U+00A0 aka M-BM-
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - text
  entry: >
    perl -pi* -e
    's/\xc2\xa0/ /g && ($t = 1) && print STDERR $_; END{{exit $t}}'

- id: generic-en-dashes-forbid
  name: '[Generic] Detect en dashes U+2013'
  description: >
    Detect the EXTREMELY confusing unicode character U+2013
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - text
  entry: >
    perl -ne 'print if $m = /\xe2\x80\x93/; $t ||= $m; END{{exit $t}}'

- id: generic-en-dashes-remove
  name: '[Generic] Remove en dashes U+2013'
  description: >
    Remove the EXTREMELY confusing unicode character U+2013
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - text
  entry: >
    perl -pi* -e
    's/\xe2\x80\x93/-/g && ($t = 1) && print STDERR $_; END{{exit $t}}'

#############
#############
## Ansible ##
#############
#############

- id: ansible-lint
  name: '[Ansible] Ansible-lint'
  description: >
    This hook runs ansible-lint.
    Origin: https://github.com/ansible/ansible-lint
  language: python
  # do not pass files to ansible-lint, see:
  # https://github.com/ansible/ansible-lint/issues/611
  pass_filenames: false
  always_run: true
  additional_dependencies:
    - ansible-lint
  entry: ansible-lint --force-color .

###########
###########
## C/C++ ##
###########
###########

- id: clang-format-c
  name: '[C] Run clang-format'
  description: >
    Run clang-format
  language: system
  types:
    - c
  entry: clang-format
  args:
    - -style=file
    - -i

- id: clang-format-cpp
  name: '[C++] Run clang-format'
  description: >
    Run clang-format
  language: system
  types:
    - c++
  entry: clang-format
  args:
    - -style=file
    - -i

- id: clang-format-header
  name: '[Header] Run clang-format'
  description: >
    Run clang-format
  language: system
  types:
    - header
  entry: clang-format
  args:
    - -style=file
    - -i

############
############
## Docker ##
############
############

- id: dockerfile-lint
  name: '[docker] Linter'
  description: >
    Lint dockerfile
    Origin: https://github.com/pryorda/dockerfilelint-precommit-hooks
  language: node
  files: .*Dockerfile.*
  types:
    - dockerfile
  additional_dependencies:
    - dockerfilelint
  entry: dockerfilelint

- id: dockerfile-lint
  name: '[docker] Linter'
  description: >
    Lint dockerfile
    Origin: https://github.com/Lucas-C/pre-commit-hooks-nodejs
  language: node
  files: .*Dockerfile.*
  types:
    - dockerfile
  additional_dependencies:
    - dockerfile_lint
  entry: dockerfile_lint
  args:
    - --dockerfile

##########
##########
## Html ##
##########
##########

- id: html-validate
  name: '[html] syntax validator'
  description: >
    HTML syntax validator using W3C v.Nu checker,
    with support for handlebars/jinja2 templates
    Origin: https://github.com/Lucas-C/pre-commit-hooks-java
  language: python
  types:
    - html
  additional_dependencies:
    - html5validator
    - jinja2
    - pybars3
    - six
  entry: html-validate

- id: html-hint
  name: '[html] NodeJS HTML syntax linter (htmlhint)'
  description: >
    NodeJS HTML syntax linter (htmlhint)
    Origin: https://github.com/Lucas-C/pre-commit-hooks-nodejs
  language: node
  types:
    - html
  additional_dependencies:
    - htmlhint
  entry: htmlhint

- id: html-lint
  name: '[html] NodeJS HTML syntax linter (htmllint)'
  description: >
    NodeJS HTML syntax linter (htmllint)
    Origin: https://github.com/Lucas-C/pre-commit-hooks-nodejs
  language: node
  types:
    - html
  additional_dependencies:
    - htmllint-cli
  entry: htmllint

- id: html-forbid-img-without-alt-text
  name: '[html] img tag alt text checker'
  description: >
    List every img tag without a alt= or data-ng-attr-alt= attribute
    Origin: https://github.com/Lucas-C/pre-commit-hooks-lxml
  language: python
  types:
    - html
  additional_dependencies:
    - lxml
  entry: html-forbid-img-without-alt-text

- id: html-forbid-non-std-attributes
  name: '[html] Non-standard html attributes checker'
  description: >
    Detect any non-standard attribute that is not prefixed with data-
    Origin: https://github.com/Lucas-C/pre-commit-hooks-lxml
  language: python
  types:
    - html
  additional_dependencies:
    - lxml
  entry: html-forbid-non-std-attributes
  args:
    - --extra-known-attributes
    - content,http-equiv,placeholder,role,style

- id: html-detect-missing-css-classes-html
  name: '[html] Missing css classes checker'
  description: >
    Detect unused or missing CSS classes definitions,
    and abort if any of the later ones is found
    Origin: https://github.com/Lucas-C/pre-commit-hooks-lxml
  language: python
  types:
    - html
  additional_dependencies:
    - lxml
    - tinycss2
  entry: html-detect-missing-css-classes

- id: html-detect-missing-css-classes-css
  name: '[css] Missing css classes checker'
  description: >
    Detect unused or missing CSS classes definitions,
    and abort if any of the later ones is found
    Origin: https://github.com/Lucas-C/pre-commit-hooks-lxml
  language: python
  types:
    - css
  additional_dependencies:
    - lxml
    - tinycss2
  entry: html-detect-missing-css-classes

- id: html-tags-blacklist
  name: '[html] Forbid some html tags'
  description: >
    Forbid some html tags
    Origin: https://github.com/Lucas-C/pre-commit-hooks-lxml
  language: python
  types:
    - html
  additional_dependencies:
    - lxml
  entry: html-tags-blacklist
  args:
    - --forbidden-tags
    - basefont,blink,center,font,marquee,s,strike,tt,u

- id: html-attributes-blacklist
  name: '[html] Forbid some html attributes'
  description: >
    Forbid some html attributes
    Origin: https://github.com/Lucas-C/pre-commit-hooks-lxml
  language: python
  types:
    - html
  additional_dependencies:
    - lxml
  entry: html-attributes-blacklist
  args:
    - --forbidden-attributes
    - align,alink,background,basefont,bgcolor,border,color,link,text,vlink

################
################
## Javascript ##
################
################

- id: js-eslint
  name: '[Javascript] eslint'
  description: >
    Run eslint
  language: node
  types:
    - javascript
  entry: eslint
  additional_dependencies:
    - "eslint"

- id: js-prettier
  name: '[Javascript] prettier'
  description: >
    Run prettier
  language: node
  types:
    - javascript
  entry: prettier
  additional_dependencies:
    - "prettier"

###########
###########
## Jinja ##
###########
###########

- id: jinja-lint
  name: '[Jinja] Linter'
  description: >
    A linter which checks the indentation and the correctness
    of Jinja-like/HTML templates.
    Origin: https://github.com/motet-a/jinjalint
  language: python
  types:
    - jinja
  additional_dependencies:
    - jinjalint
  entry: jinjalint

##########
##########
## JSON ##
##########
##########

- id: json-check-syntax
  name: '[Json] Check JSON'
  description: >
    This hook checks json files for parseable syntax.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - json
  entry: json-check-syntax

- id: json-pretty-format
  name: '[Json] Pretty format JSON'
  description: >
    This hook sets a standard for formatting JSON files.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - json
  entry: json-pretty-format
  args:
    - --autofix
    - --indent=2

##############
##############
## Markdown ##
##############
##############

- id: markdown-lint
  name: '[Markdown] Check markdown files'
  description: >
    Check markdown files and flag style issues
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  language: ruby
  types:
    - markdown
  additional_dependencies:
    - mdl
  entry: mdl
  args:
    - --rules
    - ~MD024

##########
##########
## Perl ##
##########
##########

- id: perl-critic
  name: '[Perl] perl-critic'
  description: >
    Runs perlcritic, requires script in path
    Origin: https://github.com/henryykt/pre-commit-perl
  language: script
  types:
    - perl
  entry: perl-critic

- id: perl-tidy
  name: '[Perl] perl-tidy'
  description: >
    Runs perltidy, requires script in path
    Origin: https://github.com/henryykt/pre-commit-perl
  language: script
  types:
    - perl
  entry: perl-tidy

#########
#########
## Php ##
#########
#########

- id: php-lint-all
  name: '[PHP] Syntax Check (Comprehensive)'
  description: >
    Check PHP Syntax on ALL PHP staged files with user friendly
    messages and colors.
    Origin: https://github.com/digitalpulp/pre-commit-php
  language: script
  types:
    - php
  entry: hooks/shell/php-lint
  args:
    - -s
    - all

- id: php-lint
  name: '[PHP] Syntax Check (Quick)'
  description: >
    Runs php -l on all staged files. Exits when it hits the first
    errored file
    Origin: https://github.com/digitalpulp/pre-commit-php
  language: system
  types:
    - php
  entry: php -l

- id: php-unit
  name: '[PHP] Unit'
  description: >
    Run the full php unit test. Checks which PHPUnit executable
    is available first and then runs it. Preference order is
    vendor/bin, phpunit and phpunit.phar.
    Origin: https://github.com/digitalpulp/pre-commit-php
  language: script
  types:
    - php
  entry: hooks/shell/php-unit

- id: php-cs
  name: '[PHP] Codesniffer'
  description: >
    Run php codesniffer against all staged files.
    Origin: https://github.com/digitalpulp/pre-commit-php
  language: script
  types:
    - php
  entry: hools/shell/php-cs

- id: php-cbf
  name: '[PHP] Codesniffer (Code Beutifier and Formatter)'
  description: >
    Run php codesniffer against all staged files.
    Origin: https://github.com/digitalpulp/pre-commit-php
  language: script
  types:
    - php
  entry: hooks/shell/php-cbf

- id: php-cs-fixer
  name: '[PHP] Coding Standards Fixer'
  description: Run php coding standards fixer against all staged files.
  language: script
  types:
    - php
  entry: hooks/shell/php-cs-fixer

############
############
## Puppet ##
############
############

- id: puppet-lint
  name: '[Puppet] puppet-lint'
  description: >
    Check Puppet manifests for stylistic problems
    Origin: http://puppet-lint.com/
  language: ruby
  types:
    - puppet
  additional_dependencies:
    - puppet-lint
  entry: puppet-lint

- id: puppet-validate
  name: '[Puppet] Validate Puppet manifests'
  description: >
    Validate syntax of Puppet manifests
    Origin: https://github.com/chriskuehl/puppet-pre-commit-hooks
  language: ruby
  types:
    - puppet
  entry: puppet parser validate --

- id: puppet-erb-validate
  name: '[Puppet] Validate ERB templates'
  description: >
    Validate syntax of Puppet ERB templates
    Origin: https://github.com/chriskuehl/puppet-pre-commit-hooks
  language: ruby
  types:
    - erb
  additional_dependencies:
    - puppet
  entry: puppet-erb-validate

- id: puppet-r10k-validate
  name: '[Puppet] Validate r10k Puppetfile'
  description: >
    Validate syntax of Puppetfile using r10k
    Origin: https://github.com/chriskuehl/puppet-pre-commit-hooks
  language: ruby
  files: ^Puppetfile$
  additional_dependencies:
    - r10k
  entry: puppet-r10k-validate

- id: puppet-epp-validate
  name: '[Puppet] Validate EPP templates'
  description: >
    Validate syntax of Puppet EPP templates
    Origin: https://github.com/chriskuehl/puppet-pre-commit-hooks
  language: ruby
  files: \.epp$
  additional_dependencies:
    - puppet
  entry: puppet epp validate

############
############
## Python ##
############
############

- id: python-check-ast
  name: '[Python] Check python ast'
  description: >
    Simply check whether files parse as valid python.
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-check-ast

- id: python-check-builtin-literals
  name: '[Python] Check builtin type constructor use'
  description: >
    Require literal syntax when initializing empty or zero Python builtin types.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-check-builtin-literals

- id: python-check-docstring-first
  name: '[Python] Check docstring is first'
  description: >
    Checks a common error of defining a docstring after code.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-check-docstring-first

- id: python-debug-statements
  name: '[Python] Debug Statements (Python)'
  description: >
    Check for debugger imports and py37+ `breakpoint()` calls in python source.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-debug-statement-hook

- id: python-double-quote-string-fixer
  name: '[Python] Fix double quoted strings'
  description: >
    This hook replaces double quoted strings with single quoted strings
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-double-quote-string-fixer

- id: python-fix-encoding-pragma
  name: '[Python] Fix python encoding pragma'
  description: >
    Remove '# -*- coding: utf-8 -*-' from the top of python files
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - python
  entry: python-fix-encoding-pragma
  args:
    - --remove

- id: python-requirements-txt-fixer
  name: '[Python] Fix requirements.txt'
  description: >
    Sorts entries in requirements.txt
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  files: requirements.*\.txt$
  entry: python-requirements-txt-fixer

- id: python-safetydb
  name: '[Python] Check requirements.txt safety'
  description: >
    Analyze your Python requirements for known security vulnerabilities.
    Origin: https://github.com/Lucas-C/pre-commit-hooks-safety
  language: python
  files: requirements.*\.txt$
  additional_dependencies:
    - safety
  entry: python-safety-checks

- id: python-pyupgrade
  name: '[Python] pyupgrade syntax'
  description: >
    Run pyupgrade
    Origin: https://github.com/asottile/pyupgrade
  language: python
  types:
    - python
  additional_dependencies:
    - pyupgrade
  entry: pyupgrade

- id: python-yapf
  name: '[Python] yapf formatter'
  description: >
    Run yapf formatter
    Origin: https://github.com/google/yapf
  language: python
  types:
    - python
  additional_dependencies:
    - yapf
  entry: yapf
  args:
    - --in-place
    - '--style={based_on_style: facebook, COLUMN_LIMIT=99}'

- id: python-pylint
  name: '[Python] PyCQA: pylint'
  description: >
    Run pylint
    Origin: https://github.com/PyCQA/pylint
  language: python
  types:
    - python
  additional_dependencies:
    - pylint
  entry: pylint
  args:
    - --max-line-length=99
    - --enable=all
    - --disable=locally-disabled
    - --disable=suppressed-message
    - --disable=import-error
    - --disable=bad-continuation
    - --disable=fixme

- id: python-pydocstyle
  name: '[Python] PyCQA: pydocstyle'
  description: >
    Run pydocstyle
    Origin: https://github.com/PyCQA/pydocstyle
  language: python
  types:
    - python
  additional_dependencies:
    - pydocstyle
  entry: pydocstyle

- id: python-bandit
  name: '[Python] PyCQA: bandit'
  description: >
    Run bandit
    Origin: https://github.com/PyCQA/bandit
  language: python
  types:
    - python
  additional_dependencies:
    - bandit
  entry: bandit

#########
#########
## Rst ##
#########
#########

- id: rst-linter
  name: '[Rst] Linter'
  description: >
    Check .rst files with the same linter used by pypi.org
    Origin: https://github.com/Lucas-C/pre-commit-hooks-markup
  language: python
  types:
    - rst
  additional_dependencies:
    - readme_renderer
  entry: rst-linter

##########
##########
## Ruby ##
##########
##########

- id: ruby-validate
  name: '[Ruby] Validate ruby syntax'
  description: >
    Validate syntax of ruby code
  language: ruby
  types:
    - ruby
  entry: ruby -wc

- id: ruby-bundle-auditer
  name: '[Ruby] Patch-level verification for bundler'
  description: >
    Check for vulnerable gem versions and insecure sources
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  language: ruby
  files: Gemfile.lock
  additional_dependencies:
    - bundler-audit
  entry: bundle-audit check
  args:
    - --update

- id: ruby-fasterer
  name: '[Ruby] Suggest speed improvements in Ruby'
  description: >
    Use fasterer to suggest speed improvements in Ruby
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  language: ruby
  types:
    - ruby
  additional_dependencies:
    - fasterer
  entry: fasterer

- id: ruby-reek
  name: '[Ruby] Find ruby code smells'
  description: >
    Use reek to find ruby code smells
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  language: ruby
  types:
    - ruby
  additional_dependencies:
    - reek
  entry: reek

- id: ruby-rubocop
  name: '[Ruby] Check Ruby style with rubocop and rubocop-rspec'
  description: >
    Enforce Ruby style guide with rubocop and rubocop-rspec
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  language: ruby
  types:
    - ruby
  additional_dependencies:
    - rubocop
    - rubocop-rspec
  entry: rubocop

##########
##########
## Rust ##
##########
##########

- id: rust-fmt
  name: '[Rust] Format rust files'
  description: >
    Format files with rustfmt.
    Origin: https://github.com/doublify/pre-commit-rust
  language: system
  types:
    - rust
  entry: rustfmt --

- id: rust-check
  name: '[Rust] cargo check'
  description: >
    Check the package for errors.
    Origin: https://github.com/doublify/pre-commit-rust
  language: system
  pass_filenames: false
  types:
    - rust
  entry: cargo check

- id: rust-clippy
  name: '[Rust] clippy'
  description: >
    Lint rust sources
    Origin: https://github.com/doublify/pre-commit-rust
  language: system
  pass_filenames: false
  types:
    - rust
  entry: cargo clippy --all-targets --all -- -D warnings

###########
###########
## Shell ##
###########
###########

- id: shell-check-syntax
  name: '[Shell] Check Shell scripts syntax corectness'
  description: >
    Check Shell scripts syntax corectness
    Origin: https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - shell
  entry: bash -n

- id: shell-check
  name: '[Shell] Test shell scripts with shellcheck'
  description: >
    Shell scripts conform to shellcheck
    Origin: https://github.com/jumanjihouse/pre-commit-hooks#shellcheck
  language: system
  types:
    - shell
  entry: hooks/shell/shell-shellcheck
  args:
    - --exclude=SC1091

- id: shell-script-must-have-extension
  name: '[Shell] Non-executable shell files (libs) should have an extension'
  description: >
    Non-executable shell files (libs) should have an extension
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  language: script
  types:
    - shell
    - non-executable
  entry: hooks/shell/shell-scripts-must-have-extension

- id: shell-script-must-not-have-extension
  name: '[Shell] Executable shell files (scripts) should not have an extension'
  description: >
    Executable shell files (scripts) shouldn't have an extension
    Origin: https://github.com/jumanjihouse/pre-commit-hooks
  language: script
  types:
    - shell
    - executable
  entry: hooks/shell/shell-scripts-must-not-have-extension

- id: shell-bashate
  name: '[Shell] bashate'
  description: >
    This hook runs bashate for linting shell scripts.
    Origin: https://github.com/openstack/bashate
  language: python
  types:
    - shell
  additional_dependencies:
    - bashate
  entry: bashate

- id: shell-beautysh
  name: '[Shell] beautysh'
  description: >
    This hook runs beautysh for beautifying shell scripts.
    Origin: https://github.com/lovesegfault/beautysh
  language: python
  types:
    - shell
  additional_dependencies:
    - beautysh
  entry: beautysh
  args:
    - --indent-size 2

##########
##########
## Toml ##
##########
##########

- id: toml-check-syntax
  name: '[Toml] Check Toml'
  description: >
    This hook checks toml files for parseable syntax.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - toml
  additional_dependencies:
    - toml
  entry: toml-check-syntax

#########
#########
## Xml ##
#########
#########

- id: xml-check-syntax
  name: '[Xml] Check Xml'
  description: >
    This hook checks xml files for parseable syntax.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - xml
  entry: xml-check-syntax

##########
##########
## Yaml ##
##########
##########

- id: yaml-check-syntax
  name: '[Yaml] Check Yaml'
  description: >
    This hook checks yaml files for parseable syntax.
    Origin: https://github.com/pre-commit/pre-commit-hooks
  language: python
  types:
    - yaml
  additional_dependencies:
    - ruamel.yaml
  entry: yaml-check-syntax

- id: yaml-yamllint
  name: '[Yaml] Lint yaml'
  description: >
    This hook runs yamllint.
    Origin: https://github.com/adrienverge/yamllint
  language: python
  types:
    - yaml
  additional_dependencies:
    - yamllint
  entry: yamllint
