---

# This file tells https://pre-commit.com/
# which hooks are provided by this repo
# for use by other git repos.

#- id: the id of the hook - used in pre-commit-config.yaml.
## Description
#  name: the name of the hook, shown during hook execution.
#  description: description of the hook. used for metadata purposes only.
## Installation
#  language: the language of the hook, tells pre-commit how to install the hook.
#  language_version: overrides language version.
## Scope
#  files: the pattern of files to run on.
#  exclude: exclude files that were matched by files
#  types: list of file types to run on.
#  exclude_types: exclude files that were matched by types.
#  always_run: if true this hook will run even if there are no matching files.
## Output
#  verbose: if true, forces the output of the hook to be printed.
## Misc
#  minimum_pre_commit_version: indicate a minimum compatible pre-commit version.
#  require_serial: if true, run using a single process.
## Action
#  entry: the entry point - the executable to run.
#  pass_filenames: if false no arguments will be passed to the hook.
#  args: list of additional parameters to pass to the hook.

# Template
#- id:
#  name:
#  description:
#  language:
#  files:
#  exclude:
#  types:
#  exclude_types:
#  always_run:
#  entry:
#  pass_filenames:
#  args:

#########
#########
## Git ##
#########
#########

- id: git-check-mailmap
  name: Check mailmap
  description: >
    Detect if an email address needs to be added to mailmap
    courtesy of https://github.com/jumanjihouse/pre-commit-hooks#git-check
  language: python
  exclude: .* # Otherwise runs once per file.
  always_run: true
  entry: git-check-mailmap

- id: git-forbid-binary
  name: Forbid binaries
  description: >
    Forbid binary files from being committed
    Courtesy of https://github.com/jumanjihouse/pre-commit-hooks#forbid-binary
  language: fail
  types:
    - binary
  entry: Committing binary files is not allowed.

- id: git-check
  name: Check for conflict markers and core.whitespace errors
  description: >
    Use git to check for conflict markers and core.whitespace errors,
    respecting .gitattributes
    Courtesy of https://github.com/jumanjihouse/pre-commit-hooks#git-check
  language: script
  entry: hooks/shell/git-check

- id: git-dirty
  name: Check if the git tree is dirty
  description: >
    Detect if git tree contains modified, staged, or untracked files
    curtosy: https://github.com/jumanjihouse/pre-commit-hooks#git-dirty
  language: script
  entry: hooks/shell/git-dirty

- id: git-check-added-large-files
  name: Check for added large files
  description: >
    Prevent giant files from being committed
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-added-large-files
  language: python
  entry: git-check-added-large-files
  args:
    - --maxkb=500

- id: git-check-merge-conflict
  name: Check for merge conflicts
  description: >
    Check for files that contain merge conflict strings.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-merge-conflict
  language: python
  types:
    - text
  entry: git-check-merge-conflict

#############
#############
## Generic ##
#############
#############

- id: generic-check-byte-order-marker
  name: Check for byte-order marker
  description: >
    Forbid files which have a UTF-8 byte-order marker
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-byte-order-marker
  language: python
  types:
    - text
  entry: generic-check-byte-order-marker

- id: generic-check-case-conflict
  name: Check for case conflicts
  description: >
    Check for files that would conflict in case-insensitive filesystems
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-case-conflict
  language: python
  types:
    - python
  entry: generic-check-case-conflict

- id: generic-check-executables-have-shebangs
  name: Check that executables have shebangs
  description: >
    Ensures that (non-binary) executables have a shebang.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-executables-have-shebangs
  language: python
  types:
    - text
    - executable
  entry: generic-check-executables-have-shebangs

- id: generic-check-symlinks
  name: Check for broken symlinks
  description: >
    Checks for symlinks which do not point to anything.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-symlinks
  language: python
  types:
    - symlink
  entry: generic-check-symlinks

- id: generic-check-vcs-permalinks
  name: Check vcs permalinks
  description: >
    Ensures that links to vcs websites are permalinks.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-vcs-permalinks
  language: python
  types:
    - text
  entry: generic-check-vcs-permalinks

- id: generic-detect-private-key
  name: Detect Private Key
  description: >
    Detects the presence of private keys
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#detect-private-key
  language: python
  types:
    - text
  entry: generic-detect-private-key

- id: generic-end-of-file-fixer
  name: Fix End of Files
  description: >
    Ensures that a file is either empty, or ends with one newline.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#end-of-file-fixer
  language: python
  types:
    - text
  entry: generic-end-of-file-fixer

- id: generic-trailing-whitespace
  name: Trim Trailing Whitespace
  description: >
    This hook trims trailing whitespace.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#trailing-whitespace
  language: python
  types:
    - text
  entry: generic-trailing-whitespace-fixer

- id: generic-crlf-forbid
  name: CRLF end-lines checker
  description: >
    Forbid files containing CRLF end-lines to be committed
    Courtesy of https://github.com/Lucas-C/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-crlf-forbid

- id: generic-crlf-remove
  name: CRLF end-lines remover
  description: >
    Replace CRLF end-lines by LF ones before committing
    Courtesy of https://github.com/Lucas-C/pre-commit-hooks
  language: python
  types:
    - text
  entry: generic-crlf-remove

- id: generic-tabs-forbid
  name: No-tabs checker
  description: >
    Forbid files containing tabs to be committed
    Courtesy of https://github.com/Lucas-C/pre-commit-hooks
  language: python
  exclude: (Makefile|debian/rules)(\.in)?$
  types:
    - text
  entry: generic-tabs-forbid

- id: generic-tabs-remove
  name: Tabs remover
  description: >
    Replace tabs by whitespaces before committing
    Courtesy of https://github.com/Lucas-C/pre-commit-hooks
  language: python
  exclude: (Makefile|debian/rules)(\.in)?$
  types:
    - text
  entry: generic-tabs-remove
  args:
    - --whitespaces-count=4

- id: generic-nbsp-forbid
  name: Detect nbsp U+00A0
  description: >
    Detect unicode non-breaking space character U+00A0 aka M-BM-
    Courtesy of https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - text
  entry: perl -ne 'print if $m = /\xc2\xa0/; $t ||= $m; END{{exit $t}}'

- id: generic-nbsp-remove
  name: Remove nbsp U+00A0
  description: >
    Remove unicode non-breaking space character U+00A0 aka M-BM-
    Courtesy of https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - text
  entry: perl -pi* -e 's/\xc2\xa0/ /g && ($t = 1) && print STDERR $_; END{{exit $t}}'

- id: generic-en-dashes-forbid
  name: Detect en dashes U+2013
  description: >
    Detect the EXTREMELY confusing unicode character U+2013
    Courtesy of https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - text
  entry: perl -ne 'print if $m = /\xe2\x80\x93/; $t ||= $m; END{{exit $t}}'

- id: generic-en-dashes-remove
  name: Remove en dashes U+2013
  description: >
    Remove the EXTREMELY confusing unicode character U+2013
    Courtesy of https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - text
  entry: perl -pi* -e 's/\xe2\x80\x93/-/g && ($t = 1) && print STDERR $_; END{{exit $t}}'

##########
##########
## JSON ##
##########
##########

- id: json-check-syntax
  name: Check JSON
  description: >
    This hook checks json files for parseable syntax.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-json
  language: python
  types:
    - json
  entry: json-check-syntax

- id: json-pretty-format
  name: Pretty format JSON
  description: >
    This hook sets a standard for formatting JSON files.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#pretty-format-json
  language: python
  types:
    - json
  entry: json-pretty-format
  args:
    - --autofix
    - --indent=2

##############
##############
## Markdown ##
##############
##############

- id: markdown-lint
  name: Check markdown files
  description: >
    Check markdown files and flag style issues
    Courtesy of https://github.com/jumanjihouse/pre-commit-hooks#markdownlint
  language: ruby
  types:
    - markdown
  entry: hooks/ruby/markdown-linter
  args:
    - --rules ~MD024

############
############
## Python ##
############
############

- id: python-check-ast
  name: Check python ast
  description: >
    Simply check whether files parse as valid python.
    Courtesy of https://github.com/jumanjihouse/pre-commit-hooks#markdownlint
  language: python
  types:
    - python
  entry: python-check-ast

- id: python-check-builtin-literals
  name: Check builtin type constructor use
  description: >
    Require literal syntax when initializing empty or zero Python builtin types.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-builtin-literals
  language: python
  types:
    - python
  entry: python-check-builtin-literals

- id: python-check-docstring-first
  name: Check docstring is first
  description: >
    Checks a common error of defining a docstring after code.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-docstring-first
  language: python
  types:
    - python
  entry: python-check-docstring-first

- id: python-debug-statements
  name: Debug Statements (Python)
  description: >
    Check for debugger imports and py37+ `breakpoint()` calls in python source.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#debug-statements
  language: python
  types:
    - python
  entry: python-debug-statement-hook

- id: python-double-quote-string-fixer
  name: Fix double quoted strings
  description: >
    This hook replaces double quoted strings with single quoted strings
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#double-quote-string-fixer
  language: python
  types:
    - python
  entry: python-double-quote-string-fixer

- id: python-fix-encoding-pragma
  name: Fix python encoding pragma
  description: >
    Remove '# -*- coding: utf-8 -*-' from the top of python files
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#fix-encoding-pragma
  language: python
  types:
    - python
  entry: python-fix-encoding-pragma
  args:
    - --remove

- id: python-requirements-txt-fixer
  name: Fix requirements.txt
  description: >
    Sorts entries in requirements.txt
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#requirements-txt-fixer
  language: python
  files: requirements.*\.txt$
  entry: python-requirements-txt-fixer

##########
##########
## Rust ##
##########
##########

- id: rust-fmt
  name: Format rust files
  description: >
    Format files with rustfmt.
    Courtesy of https://github.com/doublify/pre-commit-rust
  language: system
  types:
    - rust
  entry: rustfmt --

- id: rust-check
  name: cargo check
  description: >
    Check the package for errors.
    Courtesy of https://github.com/doublify/pre-commit-rust
  language: system
  pass_filenames: false
  types:
    - rust
  entry: cargo check

- id: rust-clippy
  name: clippy
  description: >
    Lint rust sources
    Courtesy of https://github.com/doublify/pre-commit-rust
  language: system
  pass_filenames: false
  types:
    - rust
  entry: cargo clippy -- -D warnings

###########
###########
## Shell ##
###########
###########

- id: shell-check-syntax
  name: Check Shell scripts syntax corectness
  description: >
    Check Shell scripts syntax corectness
    Courtesy of https://github.com/Lucas-C/pre-commit-hooks
  language: system
  types:
    - shell
  entry: bash -n

- id: shell-check
  name: Test shell scripts with shellcheck
  description: >
    Shell scripts conform to shellcheck
    Courtesy of https://github.com/jumanjihouse/pre-commit-hooks#shellcheck
  language: system
  types:
    - shell
  entry: hooks/shell/shell-shellcheck
  args:
    - --exclude=SC1091

- id: shell-script-must-have-extension
  name: Non-executable shell files (libs) should have an extension
  description: >
    Non-executable shell files (libs) should have an extension
    Courtesy of https://github.com/jumanjihouse/pre-commit-hooks#script-must-have-extension
  language: script
  types:
    - shell
    - non-executable
  entry: hooks/shell/shell-scripts-must-have-extension

- id: shell-script-must-not-have-extension
  name: Executable shell files (scripts) shouldn't have an extension
  description: >
    Executable shell files (scripts) shouldn't have an extension
    Courtesy of https://github.com/jumanjihouse/pre-commit-hooks#script-must-not-have-extension
  language: script
  types:
    - shell
    - executable
  entry: hooks/shell/shell-scripts-must-not-have-extension

- id: shell-format
  name: Check shell style with shfmt
  description: >
    Check shell style with shfmt
    Courtesy of https://github.com/jumanjihouse/pre-commit-hooks#shfmt
  language: script
  entry: hooks/shell/shell-shfmt
  types:
    - shell
  args:
    - -l
    - -i
    - '2'
    - -ci

##########
##########
## Toml ##
##########
##########

- id: toml-check-syntax
  name: Check Toml
  description: >
    This hook checks toml files for parseable syntax.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-toml
  language: python
  types:
    - toml
  entry: toml-check-syntax

#########
#########
## Xml ##
#########
#########

- id: xml-check-syntax
  name: Check Xml
  description: >
    This hook checks xml files for parseable syntax.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-xml
  language: python
  types:
    - xml
  entry: xml-check-syntax

##########
##########
## Yaml ##
##########
##########

- id: yaml-check-syntax
  name: Check Yaml
  description: >
    This hook checks yaml files for parseable syntax.
    Courtesy of https://github.com/pre-commit/pre-commit-hooks#check-yaml
  language: python
  types:
    - yaml
  entry: yaml-check-syntax
